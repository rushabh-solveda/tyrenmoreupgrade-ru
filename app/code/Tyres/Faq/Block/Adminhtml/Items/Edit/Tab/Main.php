<?php
/**
 * @category   Tyres
 * @package    Tyres_Faq
 * @author     anuj95455@gmail.com
 * @copyright  This file was generated by using Module Creator(http://code.vky.co.in/magento-2-module-creator/) provided by VKY <viky.031290@gmail.com>
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

namespace Tyres\Faq\Block\Adminhtml\Items\Edit\Tab;

use Magento\Backend\Block\Widget\Form\Generic;
use Magento\Backend\Block\Widget\Tab\TabInterface;

class Main extends Generic implements TabInterface
{
    protected $_wysiwygConfig;
 
    public function __construct(
        \Magento\Backend\Block\Template\Context $context, 
        \Magento\Framework\Registry $registry, 
        \Magento\Framework\Data\FormFactory $formFactory,  
        \Magento\Cms\Model\Wysiwyg\Config $wysiwygConfig, 
        array $data = []
    ) 
    {
        $this->_wysiwygConfig = $wysiwygConfig;
        parent::__construct($context, $registry, $formFactory, $data);
    }

    /**
     * {@inheritdoc}
     */
    public function getTabLabel()
    {
        return __('Item Information');
    }

    /**
     * {@inheritdoc}
     */
    public function getTabTitle()
    {
        return __('Item Information');
    }

    /**
     * {@inheritdoc}
     */
    public function canShowTab()
    {
        return true;
    }

    /**
     * {@inheritdoc}
     */
    public function isHidden()
    {
        return false;
    }

    /**
     * Prepare form before rendering HTML
     *
     * @return $this
     * @SuppressWarnings(PHPMD.NPathComplexity)
     * @SuppressWarnings(PHPMD.ExcessiveMethodLength)
     */
    protected function _prepareForm()
    {
        
        // $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
        // $categoryCollection = $objectManager->get('\Magento\Catalog\Model\ResourceModel\Category\CollectionFactory');
        // $categories = $categoryCollection->create();
        // $categories->addAttributeToSelect('*');
        
        // $model->setData('blog_categories', $categories);
        
        // $category=array();
        // foreach ($categories as $cate) {
        //     $category[$cate->getId()] = $cate->getName();

        // }
        $writer = new \Zend\Log\Writer\Stream(BP . '/var/log/nitesh.log');
	    $logger = new \Zend\Log\Logger();
        $logger->addWriter($writer);
        
        // $logger->info('$category->'.print_r($this->getCategories(), true));
           
        $model = $this->_coreRegistry->registry('current_tyres_faq_items');
        /** @var \Magento\Framework\Data\Form $form */
        $form = $this->_formFactory->create();
        $form->setHtmlIdPrefix('item_');
        $fieldset = $form->addFieldset('base_fieldset', ['legend' => __('Item Information')]);
        if ($model->getId()) {
            $fieldset->addField('faq_id', 'hidden', ['name' => 'faq_id']);
        }
        $fieldset->addField(
            'title',
            'text',
            ['name' => 'title', 'label' => __('Faq'), 'title' => __('Title'), 'required' => true]
        );
        
        
        $fieldset->addField(
            'status',
            'select',
            ['name' => 'status', 'label' => __('Status'), 'title' => __('Status'),  'options'   => [0 => 'Disable', 1 => 'Enable'], 'required' => true]
        );
        
        //  $fieldset->addField(
        //     'category',
        //     'select',
        //     ['name' => 'category', 'label' => __('Category'), 'title' => __('Category'),  'options'   => $category , 'required' => true]
        // );
        // $fieldset->addField(
        // 'category',
        // 'multiselect',
        //     [
        //         'label' => __('Categories'),
        //         'title' => __('Categories'),
        //         'name' => 'category',
        //         'values' => $this->getCategories(),
        //         'note' => __('Could be multiple')
               
        //     ]
        //     );
        $fieldset->addField(
        'category_ids',
        'Magento\Catalog\Block\Adminhtml\Product\Helper\Form\Category',
        
            [
                'name' => 'category_ids',
                'title' => 'Category',
                'label' => 'Category',
              
            ]
        );
     
        
        $fieldset->addField(
            'content',
            'editor',
            [
                'name' => 'content',
                'label' => __('Content'),
                'title' => __('Content'),
                'style' => 'height:20em;',
                'required' => true,
                'config'    => $this->_wysiwygConfig->getConfig(),
                'wysiwyg' => true
            ]
        );
        
        $form->setValues($model->getData());
        $this->setForm($form);
        return parent::_prepareForm();
    }
    
    
    
public function getCategories()
        {
            $data_array = array();
            foreach ($this->getCategoryTree() as $k => $v) {
                $data_array[] = array('value' => $k, 'label' => $v);
            }
            return ($data_array);
        
        }
        
        
 public function getCategoryTree($categories = "", $data_array = array())
    {
            if(empty($categories)) {
                $_objectManager = \Magento\Framework\App\ObjectManager::getInstance();
                $categoryFactory = $_objectManager->create('Magento\Catalog\Model\ResourceModel\Category\CollectionFactory');
                $categories = $categoryFactory->create()
                    ->addAttributeToSelect('*')//or you can just add some attributes
                    ->addAttributeToFilter('level', 2)//2 is actually the first level
                    ->addAttributeToFilter('is_active', 1)//if you want only active categories
                    ->addAttributeToSort('position', 'ASC');
            }
        
            foreach($categories as $k=>$category){
                
            //     $writer = new \Zend\Log\Writer\Stream(BP . '/var/log/nitesh.log');
        	   // $logger = new \Zend\Log\Logger();
            //     $logger->addWriter($writer);
               
                
            //     $categoryObject=\Magento\Framework\App\ObjectManager::getInstance();
            //     $category1=$categoryObject->create('Magento\Catalog\Helper\CategoryTree');
            //     $categoryTreepath=$category1->getTreeByCategoryId($category->getId());
               
                
            //     $logger->info('$categoryTreepath->'.print_r($categoryTreepath, true));
                 
                
                $level = $category->getLevel();
                $data_array[$category->getId()] = str_repeat("->",$level)." ".$category->getName();
                $childCategories = $category->getChildrenCategories();
                if(count($childCategories) > 0){
                    $data_array = $this->getCategoryTree($childCategories, $data_array);
                }
            }
            if(count($data_array) == 0){
                return $data_array;
            }
            return ($data_array);
    }        
        
}
